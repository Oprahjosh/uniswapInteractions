pragma solidity >= 0.7.0 < 0.9.0;

interface UniswapV2Factory{
    //contains function signatures that gets pairs
function getPair(address tokenA, address tokenB) external view returns (address pair);
}

interface UniswapV2Pair{
    //contains function signatures that gets reserve values
    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);
}

contract haveAddreses{
   address usdT = 0xdAC17F958D2ee523a2206206994597C13D831ec7;
   address DAI = 0x6B175474E89094C44Da98b954EedeAC495271d0F;
    address factory = 0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f;
    
    function getRealPairs() external view returns(uint,uint){
        address pair = UniswapV2Factory(factory).getPair(usdT,DAI);
        (uint reserve0, uint reserve1,) = UniswapV2Pair(pair).getReserves();
        return(reserve0,reserve1);

    }

